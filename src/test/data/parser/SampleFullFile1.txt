EdgeFile:SampleFullFile1.edge
  EdgeStatementsImpl(STATEMENTS)
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('<div\n  class="flex-auto flex flex-col overflow-auto w-full bg-white rounded-lg border border-primary border-opacity-10"\n  x-data="{ dirty: false, submit: false, /** @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('type{Array<number>} */selection: [] }"\n  x-init="\n\tconst onSelectionChange = (/** @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('type{Array<number>} */selection) => {\n\t\t$el.querySelectorAll(`[data-role='actions'] span`).forEach((node) => {\n\t\t\tconst selectable = node.getAttribute('data-selectable')\n\t\t\tconst shouldSelect = selection.length > 0 && (selection.length === 1 ? selectable === 'single' : selectable === 'multiple')\n\t\t\tif (shouldSelect) {\n\t\t\t\tnode.classList.add('cursor-pointer', 'hover:bg-primary', 'hover:bg-opacity-10')\n\t\t\t\tnode.classList.remove('text-gray-400')\n\t\t\t} else {\n\t\t\t\tnode.classList.add('text-gray-400')\n\t\t\t\tnode.classList.remove('cursor-pointer', 'hover:bg-primary', 'hover:bg-opacity-10')\n\t\t\t}\n\t\t})\n\t}\n\t// Bootstrap available actions\n\tonSelectionChange(selection)\n\t$watch('selection', onSelectionChange)">\n  <div class="flex justify-between border-b border-primary border-opacity-10 sticky top-0 bg-white"\n       data-role="toolbar">\n    <div class="flex">\n      <div class="flex items-center justify-center w-12 border-r py-2 mr-2">\n                <span :class="dirty && 'bg-yellow-300'" @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('click="submit = true"\n                      class="flex items-center h-6 aspect-square p-1 cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full"\n                      data-role="refresh">\n                    ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/refresh.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                </span>\n\n      </div>\n\n      <div class="flex items-center ml-1 gap-1" data-role="actions">\n                <span\n                  class="flex items-center h-6 aspect-square p-1 cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full"\n                  data-selectable="multiple">\n                    ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/edit.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                </span>\n\n        <span\n          class="flex items-center h-6 aspect-square p-1 cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full"\n          data-selectable="multiple">\n                    ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/remove.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                </span>\n\n        ')
    EdgeTagWrapperImpl(TAG_WRAPPER)
      EdgeOpenBlockTagImpl(OPEN_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('if')
        EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
          PsiElement([Edge] OPEN_PARENTHESES)('(')
        EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
          PsiElement([Edge] JAVASCRIPT_CONTENT)('$slots.actions')
        EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
          PsiElement([Edge] CLOSE_PARENTHESES)(')')
      PsiWhiteSpace('\n        ')
      EdgeStatementsImpl(STATEMENTS)
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' await $slots.actions() ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
      PsiWhiteSpace('\n        ')
      EdgeCloseBlockTagImpl(CLOSE_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('endif')
    PsiWhiteSpace('\n')
    EdgeCommentImpl(COMMENT)
      EdgeOpenCommentImpl([Edge] OPEN_COMMENT)
        PsiElement([Edge] OPEN_COMMENT)('{{--')
      EdgeCommentContentImpl([Edge] COMMENT_CONTENT)
        PsiElement([Edge] COMMENT_CONTENT)(' hello ')
      EdgeCloseCommentImpl([Edge] CLOSE_COMMENT)
        PsiElement([Edge] CLOSE_COMMENT)('--}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n      </div>\n    </div>\n\n    <div class="flex items-center gap-2 pr-4">\n            <span\n              class="flex items-center h-6 aspect-square p-1 cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full">\n                ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/search.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n            </span>\n\n      <span\n        class="flex items-center h-6 aspect-square p-1 cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full">\n                ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/printer.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n            </span>\n\n\n      <div class="flex flex-col justify-center text-sm text-right text-gray-500 leading-3 ml-2">\n        <small>Registros disponíveis: ')
    EdgeCurlyBracesImpl(CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
        PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' data.length ')
      EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
        PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('</small>\n        <small>Última atualização: ')
    EdgeCurlyBracesImpl(CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
        PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' fetchedAt ')
      EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
        PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('</small>\n      </div>\n    </div>\n\n  </div>\n\n  <form _="init set :previousScrollTop to -1 then make a FormData from me called :initialFormData end\n    on input from <input /> in me\n        make a FormData from me called currentFormData\n        if JSON.stringify(Object.fromEntries(currentFormData)) != JSON.stringify(Object.fromEntries(:initialFormData))\n            trigger dirty\n        else\n            trigger pristine\n        end\n    on scrollend(scroll)\n        set scrollDirection to my scrollTop - :previousScrollTop\n        if scrollDirection > 0 and my scrollHeight - my offsetHeight <= my scrollTop + 10\n            trigger refresh\n        end\n        set :previousScrollTop to my scrollTop" class="overflow-auto h-full" hx-get="')
    EdgeCurlyBracesImpl(CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
        PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' refreshEndpoint ')
      EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
        PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('"\n        hx-trigger="refresh"\n        x-effect="submit && $el.submit()">\n    <table _="init set :sortCount to 1\n            on clearFilter\n                put `` into <[data-role='filter'] />'s value\n                trigger input on <[data-role='filter']/> end\n            on clearSort\n                set :sortCount to 1\n                repeat in <[data-role='sort-index']/>\n                    set its innerHTML to ``\n                end\n                add .hidden to <[data-role='sort-icon']/>\n                remove .hidden from <th [data-role='sort-icon']:nth-child(1)/>\n                put 0 into <[data-role='sorter'] input/>'s @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('value\n                trigger input on <[data-role='sorter'] input/> end\n            on sort(sender, count)\n                if count == 1\n                    repeat in <[data-role='sort-index']/> in sender\n                        put :sortCount into it\n                    end\n                    increment :sortCount\n                else if count == 0\n                    set sortedValue to (first <span [data-role='sort-index']/> in sender).innerHTML as Number\n                    repeat in <span [data-role='sort-index']/>\n                        set value to (its innerHTML as Number)\n                        if its parentElement's parentElement == sender\n                            set its innerHTML to ``\n                        else if value > sortedValue\n                            put value - 1 into it\n                        end\n                    end\n                    decrement :sortCount\n                end\n                add .hidden to <[data-role='sort-icon']/> in sender\n                remove .hidden from <[data-index=`${count}`]/> in sender"\n           class="border-collapse table-auto w-full text-sm">\n      <thead class="sticky top-0 bg-white">\n      <tr class="shadow">\n        <th\n          class="font-medium py-1 w-12 relative after:content-[''] after:border-r after:absolute after:right-[0px] after:top-0 after:h-full min-w-[48px]">\n          <div class="flex flex-col justify-center items-center">\n                            <span _="on click trigger clearFilter"\n                                  class="flex items-center h-6 p-[0.1rem] aspect-square cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full">\n                                <span class="w-4 h-2">\n                                    ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/close.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                                </span>\n\n                                ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/funnel.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                            </span>\n\n            <span _="on click trigger clearSort"\n                  class="flex items-center h-6 p-[0.1rem] aspect-square cursor-pointer hover:bg-primary hover:bg-opacity-10 rounded-full">\n                                <span class="w-4 h-2">\n                                    ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/close.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                                </span>\n\n                                ')
    EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
      EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
        PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
      EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
        PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/arrow-up-down.svg') ')
      EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
        PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('\n                            </span>\n          </div>\n        </th>\n\n        ')
    EdgeTagWrapperImpl(TAG_WRAPPER)
      EdgeOpenBlockTagImpl(OPEN_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('each')
        EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
          PsiElement([Edge] OPEN_PARENTHESES)('(')
        EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
          PsiElement([Edge] OPEN_PARENTHESES)('(')
        EdgeIdentifierImpl([Edge] IDENTIFIER)
          PsiElement([Edge] IDENTIFIER)('column')
        PsiWhiteSpace(', ')
        EdgeIdentifierImpl([Edge] IDENTIFIER)
          PsiElement([Edge] IDENTIFIER)('i')
        EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
          PsiElement([Edge] CLOSE_PARENTHESES)(')')
        EdgeKeywordImpl([Edge] KEYWORD)
          PsiElement([Edge] KEYWORD)(' in ')
        EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
          PsiElement([Edge] JAVASCRIPT_CONTENT)('columns')
        EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
          PsiElement([Edge] CLOSE_PARENTHESES)(')')
      EdgeStatementsImpl(STATEMENTS)
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n        <th _="\n                    on resize(deltaX)\n                        set my *width to `${me.offsetWidth + deltaX}px`\n                        set my *minWidth to my *width\n                    on draggingBlur\n                        set my *minWidth to ''"\n            class="font-medium text-left hover:bg-primary hover:bg-opacity-10 leading-10 relative after:content-[''] after:border-r after:absolute after:right-0 after:top-0 after:h-full after:last-of-type:hidden">\n          <div class="flex items-stretch justify-between">\n            <div class="relative w-full">\n              ')
        EdgeTagWrapperImpl(TAG_WRAPPER)
          EdgeInlineTagImpl(INLINE_TAG)
            EdgeTagImpl([Edge] TAG)
              PsiElement([Edge] TAG)('@')
            EdgeTagNameImpl(TAG_NAME)
              EdgeIdentifierImpl([Edge] IDENTIFIER)
                PsiElement([Edge] IDENTIFIER)('set')
            EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
              PsiElement([Edge] OPEN_PARENTHESES)('(')
            EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
              PsiElement([Edge] JAVASCRIPT_CONTENT)(''tableId', app.helpers.cuid()')
            EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
              PsiElement([Edge] CLOSE_PARENTHESES)(')')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n\n              <input _="init set :icon to <label span/> in my parentElement then set :icon's *opacity to 0% unless my value == ''\n                                on focus\n                                    transition the :icon's opacity to 0% over 0.05 seconds\n                                on blur\n                                    transition the :icon's opacity to 100% over 0.05 seconds unless my value != ``"\n                     class="peer h-full w-full bg-transparent px-3 pt-5 text-base font-sans font-normal transition-all focus:outline-0 outline-none min-w-[100px]"\n                     data-role="filter"\n                     id="')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' tableId ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('" name="filter-')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' column['key'] ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('" placeholder=" " />\n              <label\n                class="focus:outline-0 pointer-events-none absolute pl-4 left-0 -top-0 flex h-full w-full select-none text-[11px] font-normal transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-focus:text-[11px] peer-focus:pb-3 peer-disabled:text-transparent"\n                for="')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' tableId ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('">\n                ')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' column['name'] ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n\n                <span class="w-3 h-3 text-gray-400 relative self-center ml-1">\n                  ')
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/pencil.svg') ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n                </span>\n              </label>\n            </div>\n\n            <span _="\n                            on click\n                                set input to first <input/> in me\n                                set count to @')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('value of input\n                                increment count\n                                set count to it mod 3\n                                put count into @')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('value of input\n                                trigger sort(sender: me, count: count)\n                                trigger input on <input/> in me\n                            end"\n                  class="cursor-pointer inline-flex items-center ')
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' i < columns.length - 1 ? 'mr-2' : 'mr-4' ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('"\n                  data-role="sorter">\n                                <span class="w-4 h-4 text-gray-800 relative">\n                                    <small class="absolute bottom-0 right-0" data-role="sort-index"></small>\n\n                                    <span class="text-gray-400" data-index="0" data-role="sort-icon">\n                                        ')
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/arrow-up-down.svg') ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n                                    </span>\n\n                                    <span class="hidden" data-index="1" data-role="sort-icon">\n                                        ')
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/arrow-up.svg') ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n                                    </span>\n\n                                    <span class="hidden" data-index="2" data-role="sort-icon">\n                                        ')
        EdgeRawCurlyBracesImpl(RAW_CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_RAW_CURLY_BRACES)
            PsiElement([Edge] OPEN_RAW_CURLY_BRACES)('{{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' await resource('images/arrow-down.svg') ')
          EdgePsiElementImpl([Edge] CLOSE_RAW_CURLY_BRACES)
            PsiElement([Edge] CLOSE_RAW_CURLY_BRACES)('}}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n                                    </span>\n                                </span>\n                                <input class="hidden" name="sort-')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' column['key'] ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('" value="0">\n                            </span>\n\n            ')
        EdgeTagWrapperImpl(TAG_WRAPPER)
          EdgeOpenBlockTagImpl(OPEN_BLOCK_TAG)
            EdgeTagImpl([Edge] TAG)
              PsiElement([Edge] TAG)('@')
            EdgeTagNameImpl(TAG_NAME)
              EdgeIdentifierImpl([Edge] IDENTIFIER)
                PsiElement([Edge] IDENTIFIER)('if')
            EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
              PsiElement([Edge] OPEN_PARENTHESES)('(')
            EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
              PsiElement([Edge] JAVASCRIPT_CONTENT)('i < columns.length - 1')
            EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
              PsiElement([Edge] CLOSE_PARENTHESES)(')')
          EdgeStatementsImpl(STATEMENTS)
            EdgeHTMLContentImpl([Edge] HTML_CONTENT)
              PsiElement([Edge] HTML_CONTENT)('\n            <span _="init set :dragging to false\n                        on every mousedown(target) from body\n                            set :dragging to false\n                            if target == me\n                                set :dragging to true\n                            end\n                        on every mouseup[:dragging] from body\n                            set :dragging to false\n                        on every mousemove(movementX)[:dragging] from body\n                            trigger resize(deltaX: movementX) end\n                        "\n                  class="min-w-[8px] max-w-[0px] cursor-col-resize absolute -right-[4px] top-0 bottom-0 z-10"></span>\n            ')
          EdgeCloseBlockTagImpl(CLOSE_BLOCK_TAG)
            EdgeTagImpl([Edge] TAG)
              PsiElement([Edge] TAG)('@')
            EdgeTagNameImpl(TAG_NAME)
              EdgeIdentifierImpl([Edge] IDENTIFIER)
                PsiElement([Edge] IDENTIFIER)('endif')
        PsiWhiteSpace('\n          ')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('</div>\n        </th>\n        ')
      EdgeCloseBlockTagImpl(CLOSE_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('end')
    PsiWhiteSpace('\n      ')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('</tr>\n      </thead>\n\n      <tbody\n        x-data="{ multipleSelectionTargetIndex: -1 }"\n        @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('mousedown="($event.ctrlKey || $event.shiftKey) && $event.preventDefault()"\n        @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('keydown.ctrl.a.prevent="const newSelection = []\n          $el.querySelectorAll('tr').forEach((it, index) => {\n            newSelection.push(index)\n            it.classList.add('bg-primary')\n          })\n          selection = [...newSelection]"\n        @')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('click.prevent="console.log($event.target)"\n        class="overflow-auto"\n        tabindex="0">\n      ')
    EdgeTagWrapperImpl(TAG_WRAPPER)
      EdgeOpenBlockTagImpl(OPEN_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('each')
        EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
          PsiElement([Edge] OPEN_PARENTHESES)('(')
        EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
          PsiElement([Edge] OPEN_PARENTHESES)('(')
        EdgeIdentifierImpl([Edge] IDENTIFIER)
          PsiElement([Edge] IDENTIFIER)('row')
        PsiWhiteSpace(', ')
        EdgeIdentifierImpl([Edge] IDENTIFIER)
          PsiElement([Edge] IDENTIFIER)('index')
        EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
          PsiElement([Edge] CLOSE_PARENTHESES)(')')
        EdgeKeywordImpl([Edge] KEYWORD)
          PsiElement([Edge] KEYWORD)(' in ')
        EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
          PsiElement([Edge] JAVASCRIPT_CONTENT)('data')
        EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
          PsiElement([Edge] CLOSE_PARENTHESES)(')')
      EdgeStatementsImpl(STATEMENTS)
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n      <tr data-index="')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' index ')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('" class="bg-opacity-5 hover:bg-primary hover:bg-opacity-10" tabindex="0">\n        <th class="border-b border-b-slate-200 border-r border-r-slate-100 py-3 text-slate-500 w-12"\n            scope="row">\n          ')
        EdgeCurlyBracesImpl(CURLY_BRACES)
          EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
            PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
          EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
            PsiElement([Edge] JAVASCRIPT_CONTENT)(' index + 1')
          EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
            PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('\n        </th>\n\n        ')
        EdgeTagWrapperImpl(TAG_WRAPPER)
          EdgeOpenBlockTagImpl(OPEN_BLOCK_TAG)
            EdgeTagImpl([Edge] TAG)
              PsiElement([Edge] TAG)('@')
            EdgeTagNameImpl(TAG_NAME)
              EdgeIdentifierImpl([Edge] IDENTIFIER)
                PsiElement([Edge] IDENTIFIER)('each')
            EdgeOpenParenthesesImpl([Edge] OPEN_PARENTHESES)
              PsiElement([Edge] OPEN_PARENTHESES)('(')
            EdgeIdentifierImpl([Edge] IDENTIFIER)
              PsiElement([Edge] IDENTIFIER)('column')
            EdgeKeywordImpl([Edge] KEYWORD)
              PsiElement([Edge] KEYWORD)(' in ')
            EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
              PsiElement([Edge] JAVASCRIPT_CONTENT)('columns')
            EdgeCloseParenthesesImpl([Edge] CLOSE_PARENTHESES)
              PsiElement([Edge] CLOSE_PARENTHESES)(')')
          EdgeStatementsImpl(STATEMENTS)
            EdgeHTMLContentImpl([Edge] HTML_CONTENT)
              PsiElement([Edge] HTML_CONTENT)('\n        <td\n          class="border-b border-b-slate-200 border-r border-r-slate-100 py-3 px-5 text-slate-500 border-collapse bg-clip-padding max-w-0 overflow-hidden whitespace-nowrap">\n          ')
            EdgeCurlyBracesImpl(CURLY_BRACES)
              EdgePsiElementImpl([Edge] OPEN_CURLY_BRACES)
                PsiElement([Edge] OPEN_CURLY_BRACES)('{{')
              EdgeJavascriptContentImpl([Edge] JAVASCRIPT_CONTENT)
                PsiElement([Edge] JAVASCRIPT_CONTENT)(' row[column['key']] ')
              EdgePsiElementImpl([Edge] CLOSE_CURLY_BRACES)
                PsiElement([Edge] CLOSE_CURLY_BRACES)('}}')
            EdgeHTMLContentImpl([Edge] HTML_CONTENT)
              PsiElement([Edge] HTML_CONTENT)('\n        </td>\n        ')
          EdgeCloseBlockTagImpl(CLOSE_BLOCK_TAG)
            EdgeTagImpl([Edge] TAG)
              PsiElement([Edge] TAG)('@')
            EdgeTagNameImpl(TAG_NAME)
              EdgeIdentifierImpl([Edge] IDENTIFIER)
                PsiElement([Edge] IDENTIFIER)('end')
        PsiWhiteSpace('\n      ')
        EdgeHTMLContentImpl([Edge] HTML_CONTENT)
          PsiElement([Edge] HTML_CONTENT)('</tr>\n      ')
      EdgeCloseBlockTagImpl(CLOSE_BLOCK_TAG)
        EdgeTagImpl([Edge] TAG)
          PsiElement([Edge] TAG)('@')
        EdgeTagNameImpl(TAG_NAME)
          EdgeIdentifierImpl([Edge] IDENTIFIER)
            PsiElement([Edge] IDENTIFIER)('end')
    PsiWhiteSpace('\n      ')
    EdgeHTMLContentImpl([Edge] HTML_CONTENT)
      PsiElement([Edge] HTML_CONTENT)('</tbody>\n    </table>\n  </form>\n</div>')